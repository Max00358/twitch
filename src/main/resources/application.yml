# .yml: yet another markup language
  # Spring Boot automatically loads these properties from application.yml
  # during startup to configure the application behavior

spring:
  jackson:
    # remove the null object in the JSON file we send
    default-property-inclusion: non_null
    # using below line is alternative to using @JsonProperty("embed_url") String embedUrl
    property-naming-strategy: SNAKE_CASE

  # spring cloud OpenFeign config, a declarative HTTP client used to make REST API calls
  cloud:
    openfeign:
      oauth2:
        enabled: true
        clientRegistrationId: twitch
      client:
        config:
          # Match @FeignClient(name = "twitch-api") in TwitchApiClient.java
          twitch-api:
            url: https://api.twitch.tv/helix
            loggerLevel: basic
            default-request-headers:
              Client-Id: ${TWITCH_CLIENT_ID}
  # Configures OAuth2 client credentials for authenticating with Twitch's API
  # Spring security automatically generate & re-new token for authentication
  security:
    oauth2:
      client:
        registration:
          twitch:
            authorization-grant-type: client_credentials
            client-authentication-method: client_secret_post
            client-id: ${TWITCH_CLIENT_ID}
            client-secret: ${TWITCH_CLIENT_SECRET}
        provider:
          twitch:
            token-uri: https://id.twitch.tv/oauth2/token
  datasource:
    url: jdbc:mysql://${DATABASE_URL:localhost}:3306/twitch?createDatabaseIfNotExist=true
    username: ${DATABASE_USERNAME:root}
    password: ${DATABASE_PASSWORD}
    driver-class-name: com.mysql.cj.jdbc.Driver
  sql:
    init:
      mode: ${DATABASE_INIT:always}
      schema-locations: "classpath:database-init.sql"

logging:
  level:
    # TRACE
    # DEBUG
    # ERROR
    org.apache.coyote.http11.Http11InputBuffer: TRACE   # incoming HTTP requests
    com.laioffer.twitch.external.TwitchApiClient: DEBUG
    org.springframework.security.oauth2: DEBUG
    org.springframework.jdbc.core: DEBUG
    org.springframework.jdbc.datasource.init: DEBUG     # outgoing https requests
